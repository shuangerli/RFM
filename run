#!/bin/bash
#SBATCH -N 1
#SBATCH -p RM
#SBATCH --ntasks-per-node 28
#SBATCH -t 2:00:00


if [[ $# == 0 ]]; then
		printf "Need at least 1 positional argument. Use --help to see instructions."
		exit 1
fi

#Rename the forward and reverse for later use
if [[ $1 == '-h' ]] || [[ $1 == '--help' ]]; then
	printf "\tPositional parameter 1: rep1_read1, Positional parameter 2: rep1_read2, Positional parameter 3: rep2_read1, Positional parameter 4: rep2_read2, Positional parameter 5: annotation, Positional parameter 6: ref genome.\n"
	printf "\t-example: Download sample files from ENCODE and run the program. Use replicate."
	printf "\t-norep: Without replicate. Positional parameter 2: read1, Positional parameter 3: read2, Positional parameter 4: annotation, Positional parameter 5: ref genome."
	printf "\t-trim: ONLY trim the adapters with default settings. Postional parameter 1: read1, Positional parameter 2: read2.\n"
	exit 0
fi

#Cutadapt TWO ROUNDS to cut adapters
trim() {
	printf "Running cutadapt round 1..."
	cutadapt -f fastq --match-read-wildcards --times 1 -e 0.1 -O 1 --quality-cutoff 6 -m 18 -a NNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -g CTTCCGATCTACAAGTT  -g CTTCCGATCTTGGTCCT -A AACTTGTAGATCGGA -A AGGACCAAGATCGGA -A ACTTGTAGATCGGAA -A GGACCAAGATCGGAA  -A CTTGTAGATCGGAAG  -A GACCAAGATCGGAAG -A TTGTAGATCGGAAGA -A ACCAAGATCGGAAGA -A TGTAGATCGGAAGAG -A CCAAGATCGGAAGAG -A GTAGATCGGAAGAGC -A CAAGATCGGAAGAGC -A TAGATCGGAAGAGCG  -A AAGATCGGAAGAGCG -A AGATCGGAAGAGCGT  -A GATCGGAAGAGCGTC -A ATCGGAAGAGCGTCG -A TCGGAAGAGCGTCGT -A CGGAAGAGCGTCGTG -A GGAAGAGCGTCGTGT -o rep1/reads.R1.trimmed.fastq.gz -p rep1/reads.R2.trimmed.fastq.gz rep1/reads.R1.fastq.gz rep1/reads.R2.fastq.gz
	cutadapt -f fastq --match-read-wildcards --times 1 -e 0.1 -O 1 --quality-cutoff 6 -m 18 -a NNNNNAGATCGGAAGAGCACACGTCTGAACTCCAGTCAC -g CTTCCGATCTACAAGTT  -g CTTCCGATCTTGGTCCT -A AACTTGTAGATCGGA -A AGGACCAAGATCGGA -A ACTTGTAGATCGGAA -A GGACCAAGATCGGAA  -A CTTGTAGATCGGAAG  -A GACCAAGATCGGAAG -A TTGTAGATCGGAAGA -A ACCAAGATCGGAAGA -A TGTAGATCGGAAGAG -A CCAAGATCGGAAGAG -A GTAGATCGGAAGAGC -A CAAGATCGGAAGAGC -A TAGATCGGAAGAGCG  -A AAGATCGGAAGAGCG -A AGATCGGAAGAGCGT  -A GATCGGAAGAGCGTC -A ATCGGAAGAGCGTCG -A TCGGAAGAGCGTCGT -A CGGAAGAGCGTCGTG -A GGAAGAGCGTCGTGT -o rep2/reads.R1.trimmed.fastq.gz -p rep2/reads.R2.trimmed.fastq.gz rep2/reads.R1.fastq.gz rep2/reads.R2.fastq.gz
	printf "Running cutadapt round 2..."
	cutadapt -f fastq --match-read-wildcards --times 1 -e 0.1 -O 5 --quality-cutoff 6 -m 18 -A AACTTGTAGATCGGA -A AGGACCAAGATCGGA -A ACTTGTAGATCGGAA -A GGACCAAGATCGGAA -A CTTGTAGATCGGAAG -A GACCAAGATCGGAAG -A TTGTAGATCGGAAGA -A ACCAAGATCGGAAGA -A TGTAGATCGGAAGAG -A CCAAGATCGGAAGAG -A GTAGATCGGAAGAGC -A CAAGATCGGAAGAGC -A TAGATCGGAAGAGCG -A AAGATCGGAAGAGCG -A AGATCGGAAGAGCGT -A GATCGGAAGAGCGTC -A ATCGGAAGAGCGTCG -A TCGGAAGAGCGTCGT -A CGGAAGAGCGTCGTG -A GGAAGAGCGTCGTGT -o rep1/reads.R1.trimmed2.fastq.gz -p rep1/reads.R2.trimmed2.fastq.gz rep1/reads.R1.trimmed.fastq.gz rep1/reads.R2.trimmed.fastq.gz
	cutadapt -f fastq --match-read-wildcards --times 1 -e 0.1 -O 5 --quality-cutoff 6 -m 18 -A AACTTGTAGATCGGA -A AGGACCAAGATCGGA -A ACTTGTAGATCGGAA -A GGACCAAGATCGGAA -A CTTGTAGATCGGAAG -A GACCAAGATCGGAAG -A TTGTAGATCGGAAGA -A ACCAAGATCGGAAGA -A TGTAGATCGGAAGAG -A CCAAGATCGGAAGAG -A GTAGATCGGAAGAGC -A CAAGATCGGAAGAGC -A TAGATCGGAAGAGCG -A AAGATCGGAAGAGCG -A AGATCGGAAGAGCGT -A GATCGGAAGAGCGTC -A ATCGGAAGAGCGTCG -A TCGGAAGAGCGTCGT -A CGGAAGAGCGTCGTG -A GGAAGAGCGTCGTGT -o rep2/reads.R1.trimmed2.fastq.gz -p rep2/reads.R2.trimmed2.fastq.gz rep2/reads.R1.trimmed.fastq.gz rep2/reads.R2.trimmed.fastq.gz
}

#Download example files
get_sample_file() {
	mkdir rep1 rep2
	wget -O rep1/reads.R1.fastq.gz https://www.encodeproject.org/files/ENCFF173ODI/@@download/ENCFF173ODI.fastq.gz
	wget -O rep1reads.R2.fastq.gz https://www.encodeproject.org/files/ENCFF507EGU/@@download/ENCFF507EGU.fastq.gz
	wget -O rep2/reads.R1.fastq.gz https://www.encodeproject.org/files/ENCFF578XQC/@@download/ENCFF578XQC.fastq.gz
	wget -O rep2/reads.R2.fastq.gz https://www.encodeproject.org/files/ENCFF735QHY/@@download/ENCFF735QHY.fastq.gz
	wget -O annotation.gtf.gz ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_33/gencode.v33.primary_assembly.annotation.gtf.gz
	wget -O ref.GRCh38.fa.gz ftp://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_33/GRCh38.primary_assembly.genome.fa.gz
}

#Prepare read IDs for UMI
prep_read_ids() {
	zcat rep1/reads.R1.trimmed2.fastq.gz > rep1/reads.R1.trimmed2.fastq
	zcat rep1/reads.R2.trimmed2.fastq.gz > rep1/reads.R2.trimmed2.fastq
	awk -v l=10 'BEGIN{OFS=FS=" "} substr($1, 1, 1) == "@" {print "@" substr($1, (l+3), 500) "_" substr($1, 2, l) " " $2 }; substr($1, 1, 1) != "@" {print}; ' rep1/reads.R1.trimmed2.fastq  | gzip > rep1/reads.R1.trimmed2.bc.fastq.gz
	awk -v l=10 'BEGIN{OFS=FS=" "} substr($1, 1, 1) == "@" {print "@" substr($1, (l+3), 500) "_" substr($1, 2, l) " " $2 }; substr($1, 1, 1) != "@" {print}; ' rep1/reads.R2.trimmed2.fastq  | gzip > rep1/reads.R2.trimmed2.bc.fastq.gz
	zcat rep2/reads.R1.trimmed2.fastq.gz > rep2/reads.R1.trimmed2.fastq
	zcat rep2/reads.R2.trimmed2.fastq.gz > rep2/reads.R2.trimmed2.fastq
	awk -v l=10 'BEGIN{OFS=FS=" "} substr($1, 1, 1) == "@" {print "@" substr($1, (l+3), 500) "_" substr($1, 2, l) " " $2 }; substr($1, 1, 1) != "@" {print}; ' rep2/reads.R1.trimmed2.fastq  | gzip > rep2/reads.R1.trimmed2.bc.fastq.gz
	awk -v l=10 'BEGIN{OFS=FS=" "} substr($1, 1, 1) == "@" {print "@" substr($1, (l+3), 500) "_" substr($1, 2, l) " " $2 }; substr($1, 1, 1) != "@" {print}; ' rep2/reads.R2.trimmed2.fastq  | gzip > rep2/reads.R2.trimmed2.bc.fastq.gz
}

#Read mapping with STAR
read_map_star() {
	mkdir genome_index
	STAR --runThreadN 10 --runMode genomeGenerate --genomeDir genome_index/ --genomeFastaFiles ref.GRCh38.fa --sjdbGTFfile annotation.gtf --sjdbOverhang 49
	mkdir -p rep1/STAR
	STAR --outSAMtype BAM SortedByCoordinate --runThreadN 10 --genomeDir genome_index/ --readFilesIn rep1/reads.R1.trimmed2.bc.fastq.gz rep1/reads.R2.trimmed2.bc.fastq.gz --readFilesCommand  zcat --outFilterType BySJout --outFilterMultimapNmax 1 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverLmax 0.04 --scoreDelOpen -1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --outFileNamePrefix rep1/STAR/ --alignEndsType EndToEnd
	mkdir -p rep2/STAR
	STAR --outSAMtype BAM SortedByCoordinate --runThreadN 10 --genomeDir genome_index/ --readFilesIn rep2/reads.R1.trimmed2.bc.fastq.gz rep2/reads.R2.trimmed2.bc.fastq.gz --readFilesCommand  zcat --outFilterType BySJout --outFilterMultimapNmax 1 --alignSJoverhangMin 8 --alignSJDBoverhangMin 1 --outFilterMismatchNmax 999 --outFilterMismatchNoverLmax 0.04 --scoreDelOpen -1 --alignIntronMin 20 --alignIntronMax 1000000 --alignMatesGapMax 1000000 --outFileNamePrefix rep2/STAR/ --alignEndsType EndToEnd
}

#samtools filtering
samtools_filter() {
	samtools index rep1/STAR/Aligned.sortedByCoord.out.bam
	samtools view -hb -f 2 rep1/STAR/Aligned.sortedByCoord.out.bam -o rep1/aligned.f.bam chr1:1 chr2:1 chr3:1 chr4:1 chr5:1 chr6:1 chr7:1 chr8:1 chr9:1 chr10:1 chr11:1 chr12:1 chr13:1 chr14:1 chr15:1 chr16:1 chr17:1 chr18:1 chr19:1 chr20:1 chr21:1 chr22:1 chrX:1 chrY:1
	samtools index rep1/aligned.f.bam
	samtools index rep2/STAR/Aligned.sortedByCoord.out.bam
	samtools view -hb -f 2 rep2/STAR/Aligned.sortedByCoord.out.bam -o rep2/aligned.f.bam chr1:1 chr2:1 chr3:1 chr4:1 chr5:1 chr6:1 chr7:1 chr8:1 chr9:1 chr10:1 chr11:1 chr12:1 chr13:1 chr14:1 chr15:1 chr16:1 chr17:1 chr18:1 chr19:1 chr20:1 chr21:1 chr22:1 chrX:1 chrY:1
	samtools index rep2/aligned.f.bam
}

#PCR duplicate removal using UMI
pcr_dup_rem() {
	umi_tools dedup -I rep1/aligned.f.bam --paired -S rep1/aligned.f.duplRm.bam
	umi_tools dedup -I rep2/aligned.f.bam --paired -S rep2/aligned.f.duplRm.bam
}

#Pooling and R2 retrival
pool() {
	samtools merge -f aligned.f.duplRm.pooled.bam rep1/aligned.f.duplRm.bam rep2/aligned.f.duplRm.bam
	samtools view -hb -f 130 aligned.f.duplRm.pooled.bam -o aligned.f.duplRm.pooled.R2.bam
	samtools index aligned.f.duplRm.pooled.R2.bam
}

#Quality control
qc() {
	mkdir fastqc_result
	fastqc -o fastqc_result/ aligned.f.duplRm.pooled.R2.bam
}

pure_clip() {
	pureclip -i aligned.f.duplRm.pooled.R2.bam -bai aligned.f.duplRm.pooled.R2.bam.bai -g ref.hg19.fa -iv 'chr1;chr2;chr3;' -nt 10 -o PureCLIP.crosslink_sites.bed
}


#Load all module required
module load cutadapt/1.16
module load samtools
module load fastqc

if [[ $1 == '-example' ]]; then
	get_sample_file
	FILE1=rep1/reads.R1.fastq.gz
	FILE2=rep1/reads.R2.fastq.gz
	FILE3=rep2/reads.R1.fastq.gz
	FILE4=rep2/reads.R2.fastq.gz
	ANNO=annotation.gtf.gz
	REF=ref.GRCh38.fa.gz
	trim
	prep_read_ids
	read_map_star
	samtools_filter
	pcr_dup_rem
	pool
	qc
	pure_clip
	exit 0
fi

if [[ $1 == '-trim' ]]; then
	FILE1=$2
	FILE2=$3
	trim
	exit 0
fi

if [[ $# == 6 ]]; then
	FILE1=$1
	FILE2=$2
	FILE3=$3
	FILE4=$4
	FILE4=$5
	FILE4=$6
	trim
	prep_read_ids
	read_map_star
	samtools_filter
	pcr_dup_rem
	pool
	qc
	pure_clip
	exit 0
fi
